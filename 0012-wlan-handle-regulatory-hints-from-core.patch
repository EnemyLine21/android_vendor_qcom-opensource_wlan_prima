From b734fab963ab4eaa37c69df92572dcc3b7f315fc Mon Sep 17 00:00:00 2001
From: Tushnim Bhattacharyya <tushnimb@codeaurora.org>
Date: Wed, 30 Oct 2013 16:28:45 +0530
Subject: [PATCH 12/18] wlan: handle regulatory hints from core

Ignoring regulatory hints from core can lead to
a mismatch in the channel capabilties maintained
by cfg80211 and the driver, to fix this handle
the hints from core as well.

Change-Id: Ieb70762654c419b73f3d7ede9eb9adf28662ea66
CRs-Fixed: 568857

diff --git a/CORE/SME/src/sme_common/sme_Api.c b/CORE/SME/src/sme_common/sme_Api.c
index 31a5b51..c4d845e 100644
--- a/CORE/SME/src/sme_common/sme_Api.c
+++ b/CORE/SME/src/sme_common/sme_Api.c
@@ -4750,6 +4750,13 @@ eHalStatus sme_GenericChangeCountryCode( tHalHandle hHal,
     vos_msg_t                 msg;
     tAniGenericChangeCountryCodeReq *pMsg;
 
+    if (NULL == pMac)
+    {
+        VOS_TRACE(VOS_MODULE_ID_SME, VOS_TRACE_LEVEL_FATAL,
+            "%s: pMac is null", __func__);
+        return status;
+    }
+
     status = sme_AcquireGlobalLock( &pMac->sme );
     if ( HAL_STATUS_SUCCESS( status ) )
     {
@@ -7039,7 +7046,7 @@ eHalStatus sme_HandleChangeCountryCodeByUser(tpAniSirGlobal pMac,
 
 /* ---------------------------------------------------------------------------
 
-    \fn sme_HandleChangeCountryCodeByDriver
+    \fn sme_HandleChangeCountryCodeByCore
 
     \brief Update Country code in the driver if set by kernel as world
 
@@ -7053,8 +7060,10 @@ eHalStatus sme_HandleChangeCountryCodeByUser(tpAniSirGlobal pMac,
     \return eHalStatus
 
   -------------------------------------------------------------------------------*/
-eHalStatus sme_HandleChangeCountryCodeByDriver(tpAniSirGlobal pMac, tAniGenericChangeCountryCodeReq *pMsg)
+eHalStatus sme_HandleChangeCountryCodeByCore(tpAniSirGlobal pMac, tAniGenericChangeCountryCodeReq *pMsg)
 {
+    eHalStatus  status;
+
     smsLog(pMac, LOG1, FL(" called"));
 
     //this is to make sure kernel & driver are in sync in case of CC found in
@@ -7065,6 +7074,26 @@ eHalStatus sme_HandleChangeCountryCodeByDriver(tpAniSirGlobal pMac, tAniGenericC
         palCopyMemory(pMac->hHdd, pMac->scan.countryCode11d, pMsg->countryCode,
                       WNI_CFG_COUNTRY_CODE_LEN);
     }
+
+    status = WDA_SetRegDomain(pMac, REGDOMAIN_WORLD);
+
+    if ( status != eHAL_STATUS_SUCCESS )
+    {
+        smsLog( pMac, LOGE, FL("  fail to set regId") );
+        return status;
+    }
+    else
+    {
+        status = csrInitGetChannels(pMac);
+        if ( status != eHAL_STATUS_SUCCESS )
+        {
+            smsLog( pMac, LOGE, FL("  fail to get Channels "));
+        }
+        else
+        {
+            csrInitChannelList(pMac);
+        }
+    }
     smsLog(pMac, LOG1, FL(" returned"));
     return eHAL_STATUS_SUCCESS;
 }
@@ -7097,7 +7126,7 @@ eHalStatus sme_HandleGenericChangeCountryCode(tpAniSirGlobal pMac,  void *pMsgBu
 
     if (REGDOMAIN_COUNT == reg_domain_id)
     {
-        sme_HandleChangeCountryCodeByDriver(pMac, pMsg);
+        sme_HandleChangeCountryCodeByCore(pMac, pMsg);
     }
     else
     {
@@ -9584,7 +9613,8 @@ void smeGetCommandQStatus( tHalHandle hHal )
 
     if (NULL == pMac)
     {
-        smsLog( pMac, LOGE, "smeGetCommandQStatus: pMac is NULL" );
+        VOS_TRACE(VOS_MODULE_ID_SME, VOS_TRACE_LEVEL_FATAL,
+            "%s: pMac is null", __func__);
         return;
     }
 
diff --git a/CORE/VOSS/src/vos_nvitem.c b/CORE/VOSS/src/vos_nvitem.c
index 62b74a6..b6fd67e 100644
--- a/CORE/VOSS/src/vos_nvitem.c
+++ b/CORE/VOSS/src/vos_nvitem.c
@@ -3108,13 +3108,25 @@ int wlan_hdd_linux_reg_notifier(struct wiphy *wiphy,
 
     if (pHddCtx->isLoadUnloadInProgress)
     {
-       wiphy_dbg(wiphy, "info: %s: Unloading/Loading in Progress. Ignore!!!",
-                 __func__);
+        wiphy_dbg(wiphy, "info: %s: Unloading/Loading in Progress. Ignore!!!",
+                  __func__);
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0))
+        return;
+#else
+       return 0;
+#endif
+    }
+
+    if (NULL == pHddCtx)
+    {
+       VOS_TRACE( VOS_MODULE_ID_VOSS, VOS_TRACE_LEVEL_ERROR,
+                   ("Invalid pHddCtx pointer") );
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0))
        return;
 #else
        return 0;
 #endif
+    }
 
     /* first check if this callback is in response to the driver callback */
 
@@ -3137,7 +3149,8 @@ int wlan_hdd_linux_reg_notifier(struct wiphy *wiphy,
         complete(&pHddCtx->linux_reg_req);
     }
 
-    else if (request->initiator == NL80211_REGDOM_SET_BY_USER)
+    else if (request->initiator == NL80211_REGDOM_SET_BY_USER ||
+             request->initiator ==  NL80211_REGDOM_SET_BY_CORE)
     {
 
         /* first lookup the country in the local database */
@@ -3181,44 +3194,18 @@ int wlan_hdd_linux_reg_notifier(struct wiphy *wiphy,
         linux_reg_cc[1] = country_code[1];
 
         /* now pass the new country information to sme */
-        sme_GenericChangeCountryCode(pHddCtx->hHal, country_code,
-                                     temp_reg_domain);
-
-    }
-    else if (request->initiator ==  NL80211_REGDOM_SET_BY_CORE)
-    {
-        VOS_TRACE(VOS_MODULE_ID_VOSS, VOS_TRACE_LEVEL_FATAL,
-                   "CC from kernel %c %c", request->alpha2[0], request->alpha2[1]);
-
-        /* now pass the country information to sme to make sure driver is in
-           sync in case we are back to world mode*/
         if (request->alpha2[0] == '0' && request->alpha2[1] == '0')
         {
-           nBandCapability = pHddCtx->cfg_ini->nBandCapability;
-           isVHT80Allowed = pHddCtx->isVHT80Allowed;
-           if (create_linux_regulatory_entry(wiphy, request,
-                                             pHddCtx->cfg_ini->nBandCapability) == 0)
-           {
-               VOS_TRACE(VOS_MODULE_ID_VOSS, VOS_TRACE_LEVEL_FATAL,
-                         (" regulatory entry created"));
-
-           }
-           if (pHddCtx->isVHT80Allowed != isVHT80Allowed)
-           {
-              hdd_checkandupdate_phymode( pHddCtx);
-           }
-
-           cur_reg_domain = REGDOMAIN_WORLD;
-           linux_reg_cc[0] = country_code[0];
-           linux_reg_cc[1] = country_code[1];
-
-           country_code[0] = request->alpha2[0];
-           country_code[1] = request->alpha2[1];
            sme_GenericChangeCountryCode(pHddCtx->hHal, country_code,
                                         REGDOMAIN_COUNT);
         }
-    }
+        else
+        {
+           sme_GenericChangeCountryCode(pHddCtx->hHal, country_code,
+                                        temp_reg_domain);
+        }
 
+    }
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3,9,0))
     return;
 #else
-- 
1.8.2.1

